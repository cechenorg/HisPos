<Window
    x:Class="His_Pos.SYSTEM_TAB.H1_DECLARE.PrescriptionSearch.PrescriptionEditWindow.PrescriptionEditWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:generalCustomControl="clr-namespace:His_Pos.GeneralCustomControl"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:His_Pos.SYSTEM_TAB.H1_DECLARE.PrescriptionSearch.PrescriptionEditWindow"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:newClass="clr-namespace:His_Pos.NewClass"
    xmlns:service="clr-namespace:His_Pos.Service"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="{Binding Title}"
    Width="{Binding WindowWidth, Mode=TwoWay}"
    Height="{Binding WindowHeight, Mode=TwoWay}"
    FontFamily="Segoe UI Semibold"
    Left="{Binding StartLeft, Mode=TwoWay}"
    Top="{Binding StartTop, Mode=TwoWay}"
    d:DataContext="{d:DesignInstance Type=local:PrescriptionEditViewModel}"
    mc:Ignorable="d">
    <Window.Background>
        <ImageBrush ImageSource="/Images/tabViewBackground.jpg" />
    </Window.Background>
    <Window.Resources>
        <Image x:Key="CommonHospital" Source="/Images/cross.png" />
        <service:NullableDateConverter x:Key="NullableDateConverter" />
        <service:NullableIntConverter x:Key="NullableIntConverter" />
        <service:SentinelConverter x:Key="SentinelConverter" />
        <service:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        <service:MultiCommandParametersConverter x:Key="MultiCommandParametersConverter" />
        <DataTemplate x:Key="NoCardButtonsArea" DataType="{x:Type local:PrescriptionEditWindow}">
            <StackPanel Orientation="Horizontal">
                <Label Width="65" Height="35" Margin="40,0,10,0" Content="未過卡" Foreground="Red" Style="{StaticResource BoldLabelContent18}" />

                <Button Height="35" Margin="10,0,0,0" Background="IndianRed" BorderBrush="IndianRed"
                        Command="{Binding DataContext.MakeUp, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Content="補卡" />

                <Label Height="35" Margin="10,0,0,0" Content="列印 : "  Foreground="DimGray" Style="{StaticResource BoldLabelContent18}" />

                <Button Height="35" Margin="10,0,0,0" Background="RoyalBlue" BorderBrush="RoyalBlue"
                    Command="{Binding DataContext.PrintDepositSheet, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Content="押金單" />

                <Button Height="35" Margin="10,0,0,0" Background="RoyalBlue" BorderBrush="RoyalBlue"
                    Command="{Binding DataContext.PrintReceipt, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Content="收據" />

                <Button Height="35"  Margin="10,0,0,0" Background="RoyalBlue"  BorderBrush="RoyalBlue"
                    Command="{Binding DataContext.PrintMedBag, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Content="藥袋" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="GetCardButtonsArea" DataType="{x:Type local:PrescriptionEditWindow}">
            <StackPanel Orientation="Horizontal">
                <Label Width="300" Height="35"
                    Content="{Binding EditedPrescription.OrderContent, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource BoldLabelContent16}"
                    Visibility="{Binding EditedPrescription.PrescriptionStatus.IsAdjust, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}}" />
                <Rectangle Width="270" Height="35"
                    Visibility="{Binding EditedPrescription.PrescriptionStatus.IsAdjust, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Label Height="35" Margin="0" Content="列印 : " Foreground="DimGray" Style="{StaticResource BoldLabelContent18}" />
                <Button Height="35" Margin="0" Background="RoyalBlue" BorderBrush="RoyalBlue"
                    Command="{Binding DataContext.PrintReceipt, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Content="收據" />
                <Button Height="35" Margin="10,0,0,0" Background="RoyalBlue" BorderBrush="RoyalBlue"
                    Command="{Binding DataContext.PrintMedBag, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Content="藥袋" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PrescriptionEditRecord" DataType="{x:Type local:PrescriptionEditWindow}">
            <DataTemplate.Resources>
                <Style x:Key="CusHistoryColumnHeaderStyle" TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Margin" Value="8,5,5,5" />
                </Style>
                <DataTemplate x:Key="EditIcon" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Image Width="18" Margin="10,0,5,0" Source="/Images/BlueDot.png" />
                </DataTemplate>
                <DataTemplate x:Key="AdjustIcon" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Image Width="18" Margin="10,0,5,0" Source="/Images/OrangeDot.png" />
                </DataTemplate>
            </DataTemplate.Resources>
            <DataGrid  x:Name="EditRecord"  Width="955"  Height="200"  AutoGenerateColumns="False"
                Background="{StaticResource GridBackGround}"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserReorderColumns="False"
                CanUserResizeColumns="False"
                CellStyle="{StaticResource DataGridCellStyle}"
                ColumnHeaderStyle="{DynamicResource CusHistoryColumnHeaderStyle}"
                HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding DataContext.EditRecords, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                SelectedItem="{Binding DataContext.SelectedRecord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=Window}}"
                VerticalScrollBarVisibility="Auto">
                <DataGrid.Resources>
                    <newClass:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="DataGridRow.IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource GridSelected}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="Transparent" />
                        <EventSetter Event="MouseDoubleClick" Handler="ShowMedicineDetail" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="Height" Value="35" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="40" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IconType, UpdateSourceTrigger=PropertyChanged}" Value="Edit">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource EditIcon}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconType, UpdateSourceTrigger=PropertyChanged}" Value="Adjust">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource AdjustIcon}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="120" MaxWidth="120" Header="藥品代碼" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding ProductID}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="400"  Header="藥品名稱" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding FullName}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Width="80" Header="變化量" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding Amount}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="120" Header="備註" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding Note}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="120" MaxWidth="120" Header="時間" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding TimeString}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>
        <DataTemplate x:Key="CustomerDetail" DataType="{x:Type local:PrescriptionEditWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <Label Margin="40,0,0,10" Content="已修改" Foreground="Red" Style="{StaticResource BoldLabelContent16}" />
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <Label Margin="40,0,0,10" Content="未修改" Foreground="DimGray" Style="{StaticResource BoldLabelContent16}" />
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Height="200" Background="{StaticResource GridBackGround}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="390" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <Image Width="25" Height="25" Margin="10,0,10,0"  Source="/Images/Phone.png" />
                    <TextBox Name="PatientCellPhone" Width="140" Height="30"
                        HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="手機" FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        InputMethod.IsInputMethodEnabled="False"
                        PreviewKeyDown="PatientCellPhone_PreviewKeyDown" PreviewTextInput="PatientCellPhone_PreviewTextInput"
                        Text="{Binding DataContext.DisplayPatientCellPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Image Width="20" Height="25" Margin="10,0,10,0" Source="/Images/Telephone.png" />
                    <TextBox Name="PatientTel" Width="140" Height="30" Margin="5,0,0,0"
                        HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="家電"
                        FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        InputMethod.IsInputMethodEnabled="False" PreviewKeyDown="PatientCellPhone_PreviewKeyDown" PreviewTextInput="PatientCellPhone_PreviewTextInput"
                        Text="{Binding DataContext.DisplayPatientTel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                    <Image  Width="25"  Height="25" Margin="10,0,10,0" Source="/Images/home-address.png" />
                    <TextBox Name="PatientAddress" Width="325" Height="30" HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="地址" FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        Text="{Binding DataContext.EditedPrescription.Patient.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                    <Image Width="21" Height="25" Margin="12,0,10,0"  Source="/Images/email.png" />
                    <TextBox
                        Name="PatientEmail"
                        Width="325"
                        Height="30"
                        Margin="1,0,0,0"
                        HorizontalContentAlignment="Center"
                        materialDesign:HintAssist.Hint="電子信箱"
                        FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        Text="{Binding DataContext.EditedPrescription.Patient.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="0" Margin="0,0,0,10" Orientation="Horizontal">
                    <Image Width="21" Height="25" Margin="12,0,10,0" Source="/Images/line.png" />
                    <TextBox Name="PatientLine" Width="325"  Height="30"
                        Margin="1,0,0,0" HorizontalContentAlignment="Center"  materialDesign:HintAssist.Hint="Line ID" FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        Text="{Binding DataContext.EditedPrescription.Patient.Line, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <Grid  Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"  Grid.RowSpan="3" Margin="5,0,10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="聯絡備註" FontSize="16" Foreground="{StaticResource ForeGround}" />

                    <TextBox Grid.Row="1" VerticalContentAlignment="Top" Background="{StaticResource LightForeGround}" FontSize="16" FontWeight="Bold" Foreground="{StaticResource ForeGround}"
                        Text="{Binding DataContext.DisplayPatientContactNote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <TextBlock Text="備註" VerticalAlignment="Center" FontSize="16" Grid.Row="2" Foreground="{StaticResource ForeGround}" />

                    <TextBox Grid.Row="3" VerticalContentAlignment="Top" AcceptsReturn="True"   TextWrapping="Wrap" VerticalScrollBarVisibility="Visible"
                        Background="{StaticResource LightForeGround}" FontSize="16" FontWeight="Bold" Foreground="{StaticResource ForeGround}"
                            Text="{Binding DataContext.DisplayPatientNote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <StackPanel Grid.Row="3" Grid.Column="1"  Grid.ColumnSpan="2" Margin="0,10,0,0"  Orientation="Horizontal">
                    <ContentControl Margin="280,0,0,0" Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button  Width="80" Height="30" Margin="10,0,0,10"
                        Background="DimGray" BorderBrush="DimGray"
                        Command="{Binding DataContext.CustomerRedoEdited, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="取消"
                        IsEnabled="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                    <Button
                        Width="80"
                        Height="30"
                        Margin="10,0,0,10"
                        Background="IndianRed"
                        BorderBrush="IndianRed"
                        Command="{Binding DataContext.SavePatientData, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="存檔"
                        IsEnabled="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="NotPrescribeSummary" DataType="{x:Type local:PrescriptionEditWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <StackPanel Orientation="Horizontal">
                        <Label
                            Margin="10,0,0,0"
                            Content="已修改"
                            Foreground="Red"
                            Style="{StaticResource BoldLabelContent16}"
                            Visibility="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <Label
                        Margin="10,0,0,0"
                        Content="未修改"
                        Foreground="DimGray"
                        Style="{StaticResource BoldLabelContent16}"
                        Visibility="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Width="355" Background="{StaticResource GridBackGround}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Label Height="35" Margin="10,0,0,0" Content="藥品點數"
                        Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75" Height="35"
                        HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.MedicinePoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                    <Label Height="35" Margin="10,0,0,0" Content="特材點數"
                        Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75" Height="35" Margin="5,0,0,0"
                        HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.SpecialMaterialPoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Label Height="35" Margin="10,0,0,0" Content="部分負擔"
                        Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75" Height="35" Margin="5,0,0,0"
                        HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.CopaymentPoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                    <Label Height="35" Margin="10,0,0,0" Content="藥事服務"
                        Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75" Height="35" Margin="5,0,0,0"
                        HorizontalContentAlignment="Right"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.MedicalServicePoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <Label Height="35" Margin="10,0,0,0" Content="申請點數" Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75"  Height="35" Margin="5,0,0,0" HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ApplyPoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                    <Label Height="35" Margin="10,0,0,0"  Content="總計點數" Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="75" Height="35" Margin="5,0,0,0" HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.TotalPoint, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <Label Height="30" Margin="10,0,0,0" Content="自費" Style="{StaticResource BoldLabelContent17}" />
                    <TextBox Width="60" Height="35"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        CaretBrush="Black"
                        FontSize="16" Foreground="{StaticResource ForeGround}"
                        Text="{Binding DataContext.EditedPrescription.PrescriptionPoint.AmountSelfPay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Label Height="35" Margin="5,0,0,0" Content="押金" Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="55" Height="35" Margin="5,0,0,0" HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.Deposit, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                    <Label Height="32" Margin="5,0,0,0" Content="實收" Style="{StaticResource BoldLabelContent17}" />
                    <Label Width="65" Height="35" Margin="0,0,0,0" HorizontalContentAlignment="Right" ContentStringFormat="{}{0:N0}"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ActualReceive, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent16}" />
                </StackPanel>
                <StackPanel Grid.Row="4" Orientation="Horizontal">
                    <ContentControl Margin="10,0,0,0" Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button Margin="10,5,0,0" Background="Red" BorderBrush="Red"
                        Command="{Binding DataContext.Delete, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"  Content="刪除"/>
                    <Button Margin="10,5,0,0" Background="DimGray" BorderBrush="DimGray"
                        Command="{Binding DataContext.RedoEdit, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Content="復原編輯"
                        IsEnabled="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged}" />
                    <Button Margin="10,5,0,0" Background="IndianRed" BorderBrush="IndianRed"
                        Command="{Binding DataContext.EditComplete, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="編輯完成"
                        IsEnabled="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="PrescribeSummary" DataType="{x:Type local:PrescriptionEditWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <StackPanel Orientation="Horizontal">
                        <Label  Margin="10,0,0,0" Content="已修改" Foreground="Red"
                            Style="{StaticResource BoldLabelContent18}"
                            Visibility="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <Label Margin="10,0,0,0" Content="未修改" Foreground="DimGray"
                        Style="{StaticResource BoldLabelContent18}"
                        Visibility="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Background="{StaticResource GridBackGround}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="10,0,0,0" Orientation="Horizontal">
                    <Label Height="35" Content="自費" Style="{StaticResource BoldLabelContent18}" />
                    <TextBox
                        Width="130"
                        Height="35"
                        HorizontalContentAlignment="Right"
                        CaretBrush="Black"
                        FontSize="16"
                        Foreground="{StaticResource ForeGround}"
                        IsReadOnly="{Binding DataContext.PriceReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Text="{Binding DataContext.EditedPrescription.PrescriptionPoint.AmountSelfPay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Label Margin="10,0,0,0" Content="實收" Foreground="{StaticResource ForeGround}" Style="{StaticResource BoldLabelContent18}" />
                    <Label
                        Width="70"
                        Margin="10,0,0,0"
                        HorizontalContentAlignment="Right"
                        Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ActualReceive, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Style="{StaticResource BoldLabelContent18}" />
                </StackPanel>
                <StackPanel Grid.Row="4" Orientation="Horizontal">
                    <ContentControl Margin="20,0,10,0" Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button
                        Margin="10,0,0,0"
                        Background="Red"
                        BorderBrush="Red"
                        Command="{Binding DataContext.Delete, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="刪除" />
                    <Button
                        Margin="10,0,0,0"
                        Background="DimGray" BorderBrush="DimGray"
                        Command="{Binding DataContext.RedoEdit, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="復原編輯"
                        IsEnabled="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Margin="10,0,0,0"
                        Background="IndianRed"
                        BorderBrush="IndianRed"
                        Command="{Binding DataContext.EditComplete, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Content="編輯完成"
                        IsEnabled="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Viewbox Stretch="Fill">
        <xctk:BusyIndicator BusyContent="{Binding BusyContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsBusy="{Binding IsBusy, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <Grid Width="1340" Height="800">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45" />
                    <RowDefinition Height="220" />
                    <RowDefinition />
                    <RowDefinition Height="250" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="965" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,0" Orientation="Horizontal">
                    <Image Width="30" Height="30" Margin="5,0,0,0" Source="/Images/IDcard.png" />
                    <Label Width="120" Height="35"  Margin="0,0,5,0"
                        Content="{Binding EditedPrescription.Patient.IDNumber, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource BoldLabelContent18}" />
                    <Image Width="30" Height="30" Margin="5,0,0,0"  Source="/Images/User_48px.png" />
                    <Label Width="120" Height="35" Margin="0,0,5,0"
                        Content="{Binding EditedPrescription.Patient.Name, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource BoldLabelContent18}" />
                    <Image Width="30" Height="30" Margin="0,0,0,0" Source="/Images/birthday.png" />
                    <Label Width="100" Height="35" Margin="0,0,10,0"
                        Content="{Binding EditedPrescription.Patient.Birthday, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableDateConverter}}"
                        Style="{StaticResource BoldLabelContent18}" />
                    <StackPanel Width="30" VerticalAlignment="Center">
                        <Image Width="30" Height="30" Margin="0" Source="/Images/line_enable.png" 
                               Visibility="{Binding IsLineEnable, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>
                    <Image Width="30" Height="30" Margin="0" Source="/Images/Phone.png" />
                    <Label Width="130" Height="30" Margin="0,0,5,0"
                        Content="{Binding DisplayPatientCellPhone, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource BoldLabelContent18}" />
                    <Image Width="25" Height="25" Margin="0" Source="/Images/Telephone.png" />
                    <Label Width="130"  Height="35" Margin="0"
                        Content="{Binding DisplayPatientTel, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource BoldLabelContent18}" />
                    <ContentControl Margin="10,0,0,0" Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource GetCardButtonsArea}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.CanMakeUp, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource GetCardButtonsArea}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CanMakeUp, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NoCardButtonsArea}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </StackPanel>
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Margin="10" Orientation="Horizontal">
                        <Label Content="釋出院所" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox
                            x:Name="ReleaseHospital"
                            Width="400"
                            Height="34"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            BorderBrush="DimGray"
                            BorderThickness="0,0,0,1"
                            CaretBrush="Black"
                            FontStretch="ExtraExpanded"
                            IsEnabled="{Binding NotPrescribe, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource BoldTextBoxContent16}"
                            Text="{Binding EditedPrescription.Institution.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding
                                    Key="Enter"
                                    Command="{Binding GetInstitution}"
                                    CommandParameter="{Binding Text, ElementName=ReleaseHospital}" />
                            </TextBox.InputBindings>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Button x:Name="CommonHospitalList"  Width="30" Height="30" Margin="10,0,10,0" Padding="0" Background="Transparent" BorderBrush="Transparent"
                            Command="{Binding ShowCommonInstitutionSelectionWindow}"
                            Content="{StaticResource CommonHospital}"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="Visible" Cursor="Hand" />
                        <Label Content="就醫科別" Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="DivisionCombo"
                            Width="170"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="FullName"
                            FontSize="17"
                            Foreground="{StaticResource ForeGround}"
                            InputScope="AlphanumericHalfWidth"
                            IsEditable="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding Divisions}"
                            PreviewKeyDown="Division_PreviewKeyDown"
                            SelectedItem="{Binding EditedPrescription.Division, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            StaysOpenOnEdit="True"
                            TextSearch.TextPath="ID">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label
                            Margin="10,0,0,0"
                            Content="調劑藥師"
                            Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="HisPerson"
                            Width="170"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="Name"
                            FontSize="17"
                            Foreground="{StaticResource ForeGround}"
                            IsEditable="False"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding MedicalPersonnels}"
                            SelectedItem="{Binding EditedPrescription.Pharmacist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Margin="10,0,0,0" Content="就醫序號" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox
                            Width="170"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            BorderBrush="DimGray"
                            BorderThickness="0,0,0,1"
                            CharacterCasing="Upper"
                            FontSize="17"
                            Foreground="{StaticResource ForeGround}"
                            MaxLength="4"
                            PreviewKeyDown="MedicalNumber_OnPreviewKeyDown"
                            Text="{Binding EditedPrescription.TempMedicalNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Margin="10" Orientation="Horizontal">
                        <Label Content="就醫日期" Style="{StaticResource BoldLabelContent18}" />
                        <xctk:MaskedTextBox
                            x:Name="TreatDate"
                            Width="160"
                            Height="35"
                            Margin="10,0,0,0"
                            HorizontalContentAlignment="Center"
                            FontSize="17"
                            Foreground="{StaticResource ForeGround}"
                            GotFocus="DateControl_GotFocus"
                            InputMethod.IsInputMethodEnabled="False"
                            InsertKeyMode="Overwrite"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Mask="000/00/00"
                            PreviewKeyDown="TreatDate_PreviewKeyDown"
                            PromptChar="-"
                            Style="{StaticResource MaterialDesignTextBox}"
                            ValueDataType="{x:Type xctk:DateTimeFormat}">
                            <Binding
                                Converter="{StaticResource NullableDateConverter}"
                                Mode="TwoWay"
                                NotifyOnValidationError="True"
                                Path="EditedPrescription.TreatDate"
                                UpdateSourceTrigger="PropertyChanged"
                                ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <service:DateValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </xctk:MaskedTextBox>
                        <Label Margin="10,0,0,0" Content="調劑日期" Style="{StaticResource BoldLabelContent18}" />
                        <xctk:MaskedTextBox
                            Width="170" Height="35" Margin="0,0,0,0" HorizontalContentAlignment="Center" BorderBrush="DimGray"
                            BorderThickness="0,0,0,1" FontSize="17" Foreground="{StaticResource ForeGround}"  InsertKeyMode="Overwrite"
                            IsReadOnly="{Binding EditedPrescription.PrescriptionStatus.IsDeclare}"
                            IsReadOnlyCaretVisible="False"  Mask="000/00/00"  PromptChar="-"
                            Style="{StaticResource MaterialDesignTextBox}"
                            ValueDataType="{x:Type xctk:DateTimeFormat}">
                            <Binding Converter="{StaticResource NullableDateConverter}" Mode="TwoWay"  NotifyOnValidationError="True"
                                Path="EditedPrescription.AdjustDate"
                                UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <service:DateValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <command:EventToCommand Command="{Binding AdjustDateLostFocus}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </xctk:MaskedTextBox>
                        <Label Margin="18,0,0,0" Content="主要診斷" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox x:Name="MainDiagnosis"  Width="170"  Height="35"  HorizontalContentAlignment="Center"
                            CaretBrush="Black"  CharacterCasing="Upper"  FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputMethod.IsInputMethodEnabled="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Text="{Binding EditedPrescription.MainDisease.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <command:EventToCommand Command="{Binding CheckClearDisease}">
                                        <command:EventToCommand.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                                <Binding ElementName="MainDiagnosis" Path="Name" />
                                                <Binding ElementName="MainDiagnosis" Path="Text" />
                                            </MultiBinding>
                                        </command:EventToCommand.CommandParameter>
                                    </command:EventToCommand>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding GetDiseaseCode}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                            <Binding ElementName="MainDiagnosis" Path="Name" />
                                            <Binding ElementName="MainDiagnosis" Path="Text" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Label Margin="10,0,0,0" Content="次要診斷" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox
                            x:Name="SecondDiagnosis"
                            Width="170"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            CaretBrush="Black"
                            CharacterCasing="Upper"
                            FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputMethod.IsInputMethodEnabled="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Text="{Binding EditedPrescription.SubDisease.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <command:EventToCommand Command="{Binding CheckClearDisease}">
                                        <command:EventToCommand.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                                <Binding ElementName="SecondDiagnosis" Path="Name" />
                                                <Binding ElementName="SecondDiagnosis" Path="Text" />
                                            </MultiBinding>
                                        </command:EventToCommand.CommandParameter>
                                    </command:EventToCommand>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding GetDiseaseCode}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                            <Binding ElementName="SecondDiagnosis" Path="Name" />
                                            <Binding ElementName="SecondDiagnosis" Path="Text" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Label Margin="10,0,0,0" Content="領藥次數" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox
                            x:Name="ChronicTotal"
                            Width="66"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            CaretBrush="Black"
                            FontSize="16"
                            InputMethod.IsInputMethodEnabled="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsReadOnly="{Binding ChronicTimesCanEdit, UpdateSourceTrigger=PropertyChanged}"
                            IsReadOnlyCaretVisible="False"
                            MaxLength="1"
                            PreviewKeyDown="ChronicTotal_PreviewKeyDown"
                            Text="{Binding EditedPrescription.ChronicTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableIntConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Label Content=" 一 " Style="{StaticResource BoldLabelContent18}" />
                        <TextBox
                            x:Name="ChronicSequence"
                            Width="66"
                            Height="35"
                            HorizontalContentAlignment="Center"
                            CaretBrush="Black"
                            FontSize="16"
                            InputMethod.IsInputMethodEnabled="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsReadOnly="{Binding ChronicTimesCanEdit, UpdateSourceTrigger=PropertyChanged}"
                            MaxLength="1"
                            PreviewKeyDown="ChronicSequence_PreviewKeyDown"
                            Text="{Binding EditedPrescription.ChronicSeq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableIntConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Margin="10" Orientation="Horizontal">
                        <Label Height="35" Content="調劑案件"  Style="{StaticResource BoldLabelContent18}" />
                        <Label Width="170" Height="35" HorizontalContentAlignment="Center" BorderBrush="DimGray"
                            BorderThickness="0,0,0,1"
                            Content="{Binding EditedPrescription.AdjustCase.FullName, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource BoldLabelContent17}" />
                        <Label Margin="10,0,0,0" Content="處方案件" Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="PrescriptionCaseCombo"
                            Width="170"
                            Height="34"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="FullName"
                            FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputScope="AlphanumericHalfWidth"
                            IsEditable="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding PrescriptionCases}"
                            PreviewKeyDown="PrescriptionCaseCombo_OnPreviewKeyDown"
                            SelectedItem="{Binding EditedPrescription.PrescriptionCase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            StaysOpenOnEdit="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Margin="18,0,0,0" Content="部分負擔" Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="CopaymentCombo"
                            Width="170"
                            Height="34"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="FullName"
                            FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputScope="AlphanumericHalfWidth"
                            IsEditable="False"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding Copayments}"
                            PreviewKeyDown="CopaymentCombo_PreviewKeyDown"
                            SelectedItem="{Binding EditedPrescription.Copayment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            StaysOpenOnEdit="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding CopaymentSelectionChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Margin="10,0,0,0" Content="給付類別" Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="PaymentCategoryCombo"
                            Width="170"
                            Height="34"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="FullName"
                            FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputScope="AlphanumericHalfWidth"
                            IsEditable="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding PaymentCategories}"
                            PreviewKeyDown="PaymentCategoryCombo_PreviewKeyDown"
                            SelectedItem="{Binding EditedPrescription.PaymentCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            StaysOpenOnEdit="False">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Margin="10,0,0,0" Content="特定治療" Style="{StaticResource BoldLabelContent18}" />
                        <ComboBox
                            x:Name="SpecialTreatCombo"
                            Width="170"
                            Height="34"
                            HorizontalContentAlignment="Center"
                            DisplayMemberPath="FullName"
                            FontSize="16"
                            Foreground="{StaticResource ForeGround}"
                            InputScope="AlphanumericHalfWidth"
                            IsEditable="False"
                            IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            IsTextSearchEnabled="True"
                            ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}"
                            ItemsSource="{Binding SpecialTreats}"
                            PreviewKeyDown="SpecialTreatCombo_PreviewKeyDown"
                            SelectedItem="{Binding EditedPrescription.SpecialTreat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            StaysOpenOnEdit="False">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Row="3" Margin="10" Orientation="Horizontal">
                        <Label Content="原就醫識別碼" Style="{StaticResource BoldLabelContent18}" />
                        <TextBox x:Name="MedIDCode1" Width="240" Height="35" HorizontalContentAlignment="Center" BorderBrush="DimGray" CharacterCasing="Upper" 
                                 Text="{Binding EditedPrescription.OrigTreatmentCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="17" Foreground="{StaticResource ForeGround}" MaxLength="20">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <command:EventToCommand Command="{Binding DataChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </Grid>
                <DataGrid Name="PrescriptionMedicines" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Width="1320"
                    Margin="10,0,10,0" HorizontalAlignment="Left" AllowDrop="True" AutoGenerateColumns="False"
                    Background="{StaticResource GridBackGround}"
                    CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False"
                    CellStyle="{StaticResource DataGridCellStyle}"
                    ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                    EnableRowVirtualization="False"
                    FrozenColumnCount="3"
                    GridLinesVisibility="Horizontal"
                    ItemsSource="{Binding EditedPrescription.Medicines, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding EditedPrescription.SelectedMedicine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SentinelConverter}}">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="False" />
                            <Setter Property="Width" Value="100" />
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="15" />
                                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Width" Value="15" />
                                    <Setter Property="Height" Value="Auto" />
                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <newClass:BindingProxy x:Key="proxy" Data="{Binding}" />
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="FontSize" Value="17" />
                            <Setter Property="Height" Value="40" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{StaticResource GridDarkerBackGround}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=Price0}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="0.5" Color="Pink" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="30" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Name="DeleteDot" Width="18" Source="/Images/DeleteDot.png" Visibility="Hidden"></Image>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn MinWidth="10" Binding="{Binding Order, UpdateSourceTrigger=PropertyChanged}" FontSize="16" FontWeight="Bold" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn x:Name="MedicineId" MinWidth="150" Width="auto" Header="健保代碼" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox
                                        Name="MedicineID"
                                        MinWidth="150"
                                        Width="auto"
                                        Height="35"
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Stretch"
                                        Background="Transparent"
                                        BorderBrush="DimGray"
                                        BorderThickness="0,0,0,1"
                                        CaretBrush="Black"
                                        CharacterCasing="Upper"
                                        FontSize="17"
                                        InputScope="AlphanumericHalfWidth"
                                        KeyDown="MedicineID_OnKeyDown"
                                        MouseLeftButtonUp="MedicineID_OnGotFocus"
                                        PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton"
                                        Text="{Binding ID, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="380" MaxWidth="380" CanUserResize="False" Header="藥品名稱" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                                        <Border Height="23" Margin="0,2,5,0" Padding="0" Background="DimGray" CornerRadius="5" SnapsToDevicePixels="true"
                                            Visibility="{Binding MostPriced, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                                            <TextBlock Margin="5,0,5,0" Padding="0,1,0,3"
                                                FontSize="14" FontWeight="Bold" Foreground="White"
                                                PreviewMouseLeftButtonDown="ChangeMedicineIDToMostPriced" Text="G" />
                                        </Border>
                                        <generalCustomControl:ProductStatusIcon
                                            ControlLevel="{Binding ControlLevel, UpdateSourceTrigger=PropertyChanged}"
                                            IsCommon="{Binding IsCommon, UpdateSourceTrigger=PropertyChanged}"
                                            IsFrozen="{Binding Frozen, UpdateSourceTrigger=PropertyChanged}"
                                            IsInventoryError="{Binding InventoryError, UpdateSourceTrigger=PropertyChanged}" />
                                        <Label Margin="-5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                            Content="{Binding FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                            FontSize="16" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <EventSetter Event="MouseDoubleClick" Handler="ShowMedicineDetail" />
                                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="PrescriptionMedicines_PreviewMouseLeftButtonDown" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Foreground" Value="#FF424040" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="DosageText" MinWidth="60" Header="用量" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox
                                        x:Name="Dosage"
                                        Height="35"
                                        MinWidth="60"
                                        HorizontalContentAlignment="Center"
                                        BorderBrush="DimGray"
                                        BorderThickness="0,0,0,1"
                                        CaretBrush="Black"
                                        FontSize="16"
                                        FontWeight="Bold"
                                        GotFocus="InputTextBox_OnGotFocus"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        IsReadOnlyCaretVisible="False"
                                        KeyDown="DoubleTextBox_OnKeyDown"
                                        PreviewKeyDown="PrescriptionMedicines_PreviewKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding Dosage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" Header="用法" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox
                                        x:Name="Usage"
                                        Height="35"
                                        MinWidth="40"
                                        HorizontalContentAlignment="Center"
                                        BorderBrush="DimGray"
                                        BorderThickness="0,0,0,1"
                                        CaretBrush="Black"
                                        CharacterCasing="Upper"
                                        FontSize="16"
                                        FontWeight="Bold"
                                        GotFocus="InputTextBox_OnGotFocus"
                                        InputMethod.IsInputMethodEnabled="False"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        IsReadOnlyCaretVisible="False"
                                        PreviewKeyDown="PrescriptionMedicines_PreviewKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding UsageName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" Header="天數" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate x:Name="MedicineDaysDataTemplate">
                                    <TextBox x:Name="MedicineDays" Height="35" MinWidth="40" HorizontalContentAlignment="Center" BorderBrush="DimGray" BorderThickness="0,0,0,1"
                                        CaretBrush="Black" FontSize="16" FontWeight="Bold" GotFocus="InputTextBox_OnGotFocus" InputScope="Number"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        PreviewKeyDown="PrescriptionMedicines_PreviewKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding Days, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableIntConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" Header="途徑" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="Position" Height="35" MinWidth="40"
                                        HorizontalContentAlignment="Center" BorderBrush="DimGray" BorderThickness="0,0,0,1"
                                        CaretBrush="Black" CharacterCasing="Upper" FontSize="16" FontWeight="Bold"  GotFocus="InputTextBox_OnGotFocus"
                                        InputMethod.IsInputMethodEnabled="False"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        PreviewKeyDown="PrescriptionMedicines_PreviewKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding PositionID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" Header="總量" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="MedicineAmount" Height="35" MinWidth="40" HorizontalContentAlignment="Center"
                                        BorderBrush="DimGray" BorderThickness="0,0,0,1"
                                        CaretBrush="Black" FontSize="16" FontWeight="Bold"  Foreground="IndianRed"
                                        GotFocus="InputTextBox_OnGotFocus"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        IsReadOnlyCaretVisible="False"
                                        KeyDown="DoubleTextBox_OnKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding Amount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding DataContext.MedicineAmountChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn MinWidth="60" Binding="{Binding NHIPrice, UpdateSourceTrigger=PropertyChanged}" FontSize="16" FontWeight="Bold" Header="健保價" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Price0, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Foreground" Value="IndianRed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn  MinWidth="40" Header="自費" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox  x:Name="PaySelf" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                                        IsChecked="{Binding PaySelf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding DataContext.MedicinePriceChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="60" Header="自費價" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="MedicinePrice" Height="35" MinWidth="40"
                                        HorizontalContentAlignment="Center" BorderBrush="DimGray" BorderThickness="0,0,0,1"
                                        CaretBrush="Black" FontSize="16" FontWeight="Bold"
                                        GotFocus="InputTextBox_OnGotFocus"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        IsReadOnly="{Binding PaySelf, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}}"
                                        IsReadOnlyCaretVisible="False"
                                        KeyDown="DoubleTextBox_OnKeyDown"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding Price, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="60" Header="總價" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox
                                        x:Name="MedicineTotal"
                                        Height="35"
                                        MinWidth="40"
                                        HorizontalContentAlignment="Center"
                                        BorderBrush="DimGray"
                                        BorderThickness="0,0,0,1"
                                        CaretBrush="Black"
                                        FontSize="16"
                                        FontWeight="Bold"
                                        GotFocus="InputTextBox_OnGotFocus"
                                        InputScope="AlphanumericHalfWidth"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                        IsReadOnly="{Binding PaySelf, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}}"
                                        IsReadOnlyCaretVisible="False"
                                        PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                        Text="{Binding TotalPrice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding DataContext.MedicinePriceChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn MinWidth="60"
                            Binding="{Binding AveragePrice, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="16" FontWeight="Bold" Header="進價" IsReadOnly="True"
                            Visibility="{Binding Data.EditedPrescription.IsBuckle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource proxy}, FallbackValue=Collapsed}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="40"
                            Binding="{Binding UsableAmount, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="16" FontWeight="Bold" Header="可用量" IsReadOnly="True"
                            Visibility="{Binding Data.EditedPrescription.IsBuckle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource proxy}, FallbackValue=Collapsed}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn  MinWidth="60" Header="扣庫量" IsReadOnly="True"
                            Visibility="{Binding Data.EditedPrescription.IsBuckle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource proxy}, FallbackValue=Collapsed}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DataTemplate.Resources>
                                        <DataTemplate x:Key="AdjustBuckle">
                                            <TextBox x:Name="BuckleAmount" MinWidth="60"
                                                HorizontalContentAlignment="Center" BorderBrush="DimGray" BorderThickness="0,0,0,1" CaretBrush="Black" FontSize="16"
                                                FontWeight="Bold" GotFocus="InputTextBox_OnGotFocus" InputScope="AlphanumericHalfWidth"
                                                IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                                                IsReadOnlyCaretVisible="False"
                                                KeyDown="DoubleTextBox_OnKeyDown"
                                                PreviewMouseLeftButtonDown="BuckleAmount_PreviewMouseLeftButtonDown"
                                                PreviewMouseRightButtonUp="BuckleAmount_PreviewMouseRightButtonUp"
                                                Text="{Binding BuckleAmount, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Style>
                                                    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NotEnough, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                <Setter Property="Foreground" Value="IndianRed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                        <DataTemplate x:Key="AdjustNoBuckle">
                                            <!--<Image Width="20" Source="../../../../Images/ban.png" />-->
                                            <TextBox
                                                x:Name="BuckleAmount"
                                                MinWidth="60"
                                                HorizontalContentAlignment="Center"
                                                BorderBrush="DimGray"
                                                BorderThickness="0,0,0,1"
                                                CaretBrush="Black"
                                                FontSize="16"
                                                FontWeight="Bold"
                                                GotFocus="InputTextBox_OnGotFocus"
                                                InputScope="AlphanumericHalfWidth"
                                                IsEnabled="False"
                                                IsReadOnlyCaretVisible="False"
                                                KeyDown="DoubleTextBox_OnKeyDown"
                                                PreviewMouseLeftButtonDown="BuckleAmount_PreviewMouseLeftButtonDown"
                                                PreviewMouseRightButtonUp="BuckleAmount_PreviewMouseRightButtonUp"
                                                Text="{Binding BuckleAmount, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Style>
                                                    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NotEnough, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                <Setter Property="Foreground" Value="IndianRed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <command:EventToCommand Command="{Binding DataContext.DataChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataTemplate.Resources>
                                    <ContentControl Content="{Binding}">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="ContentTemplate" Value="{StaticResource AdjustBuckle}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.IsClosed, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="false">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource AdjustBuckle}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DataContext.IsClosed, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="true">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource AdjustNoBuckle}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" IsReadOnly="True" Visibility="Hidden">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        x:Name="AdjustNoBuckle"
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        IsChecked="{Binding AdjustNoBuckle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding DataContext.AdjustNoBuckle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="40" Header="結案" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="IsClosed" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                                        IsChecked="{Binding IsClosed, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding CanEdit, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding DataContext.IsClosed, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel  Grid.Row="3" Grid.Column="0" Margin="10,10,0,10" Orientation="Vertical">
                    <StackPanel Height="35" Background="{StaticResource GridBackGround}" Orientation="Horizontal">
                        <RadioButton Margin="10,0,0,0"  VerticalAlignment="Center" Content="顧客資料" FontSize="14" GroupName="CusHistoryGroup"
                            IsChecked="{Binding Path=SelectedDetail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Option1}" />
                        <RadioButton Margin="10,0,0,0" VerticalAlignment="Center" Content="藥品修改紀錄" FontSize="14"  GroupName="CusHistoryGroup"
                            IsChecked="{Binding Path=SelectedDetail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Option2}" />
                    </StackPanel>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource CustomerDetail}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.SelectedDetail, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option1">
                                        <Setter Property="ContentTemplate" Value="{StaticResource CustomerDetail}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.SelectedDetail, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option2">
                                        <Setter Property="ContentTemplate" Value="{StaticResource PrescriptionEditRecord}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </StackPanel>
                <ContentControl Grid.Row="3" Grid.Column="1" Margin="0,10,0,10" Content="{Binding}">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource NotPrescribeSummary}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.SelectedPatientDetail, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option1">
                                    <Setter Property="ContentTemplate" Value="{StaticResource NotPrescribeSummary}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.SelectedPatientDetail, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option2">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PrescribeSummary}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>
        </xctk:BusyIndicator>
    </Viewbox>
</Window>
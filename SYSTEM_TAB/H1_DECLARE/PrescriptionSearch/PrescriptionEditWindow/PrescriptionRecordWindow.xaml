<Window x:Class="His_Pos.SYSTEM_TAB.H1_DECLARE.PrescriptionSearch.PrescriptionEditWindow.PrescriptionRecordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:generalCustomControl="clr-namespace:His_Pos.GeneralCustomControl"
        xmlns:newClass="clr-namespace:His_Pos.NewClass"
        xmlns:service="clr-namespace:His_Pos.Service"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:His_Pos.SYSTEM_TAB.H1_DECLARE.PrescriptionSearch.PrescriptionEditWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        FontFamily="Segoe UI Semibold"
        Title="{Binding Title}" Height="{Binding WindowHeight, Mode=TwoWay}" 
        Width="{Binding WindowWidth, Mode=TwoWay}" 
        Top="{Binding StartTop, Mode=TwoWay}"
        Left="{Binding StartLeft, Mode=TwoWay}">
    <Window.Background>
        <ImageBrush ImageSource="/Images/tabViewBackground.jpg"/>
    </Window.Background>
    <Window.Resources>
        <Image x:Key="CommonHospital" Source="/Images/cross.png"/>
        <service:NullableDateConverter x:Key="NullableDateConverter" />
        <service:NullableIntConverter x:Key="NullableIntConverter" />
        <service:SentinelConverter x:Key="SentinelConverter"/>
        <service:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
        <service:MultiCommandParametersConverter x:Key="MultiCommandParametersConverter"/>
        <DataTemplate x:Key="NoCardButtonsArea" DataType="{x:Type local:PrescriptionRecordWindow}">
            <StackPanel Orientation="Horizontal">
                <Label Width="65" Height="35" Margin="40,0,10,0" Style="{StaticResource BoldLabelContent18}" Content="未過卡" Foreground="Red"/>
                <Button Content="補卡" Height="35" Command="{Binding DataContext.MakeUp,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="IndianRed" BorderBrush="IndianRed" Margin="10,0,0,0" />
                <Label Height="35" Margin="10,0,0,0" Style="{StaticResource BoldLabelContent18}" Content="列印 : " Foreground="DimGray"/>
                <Button Content="押金單" Height="35" Command="{Binding DataContext.PrintDepositSheet,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="RoyalBlue" BorderBrush="RoyalBlue" Margin="10,0,0,0"/>
                <Button Content="收據" Height="35" Command="{Binding DataContext.PrintReceipt,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="RoyalBlue" BorderBrush="RoyalBlue" Margin="10,0,0,0"/>
                <Button Content="藥袋" Height="35" Command="{Binding DataContext.PrintMedBag,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="RoyalBlue" BorderBrush="RoyalBlue" Margin="10,0,0,0"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="GetCardButtonsArea" DataType="{x:Type local:PrescriptionRecordWindow}">
            <StackPanel Orientation="Horizontal">
                <Label Height="35" Margin="279,0,0,0" Style="{StaticResource BoldLabelContent18}" Content="列印 : " Foreground="DimGray"/>
                <Button Content="收據" Height="35" Command="{Binding DataContext.PrintReceipt,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="RoyalBlue" BorderBrush="RoyalBlue" Margin="10,0,0,0"/>
                <Button Content="藥袋" Height="35" Command="{Binding DataContext.PrintMedBag,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="RoyalBlue" BorderBrush="RoyalBlue" Margin="10,0,0,0"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PrescriptionEditRecord" DataType="{x:Type local:PrescriptionEditWindow}" >
            <DataTemplate.Resources>
                <Style x:Key="CusHistoryColumnHeaderStyle" TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Margin" Value="8,5,5,5" />
                </Style>
                <DataTemplate x:Key="EditIcon" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Image Source="/Images/BlueDot.png" Width="18" Margin="10,0,5,0"/>
                </DataTemplate>
                <DataTemplate x:Key="AdjustIcon" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Image Source="/Images/OrangeDot.png" Width="18" Margin="10,0,5,0"/>
                </DataTemplate>
            </DataTemplate.Resources>
            <DataGrid x:Name="EditRecord" AutoGenerateColumns="False" CellStyle="{StaticResource DataGridCellStyle}" ItemsSource="{Binding DataContext.EditRecords,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                      CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False" Background="{StaticResource GridBackGround}" ColumnHeaderStyle="{DynamicResource CusHistoryColumnHeaderStyle}" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" 
                      CanUserAddRows="False" SelectedItem="{Binding DataContext.SelectedRecord,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType=Window}}" Height="255" Width="915">
                <DataGrid.Resources>
                    <newClass:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="DataGridRow.IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource GridSelected}"/>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="Transparent"/>
                        <EventSetter Event="MouseDoubleClick" Handler="ShowMedicineDetail"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Height" Value="35"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn IsReadOnly="True" Width="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Note, UpdateSourceTrigger=PropertyChanged}" Value="處方調劑修改">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource EditIcon}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Note, UpdateSourceTrigger=PropertyChanged}" Value="處方調劑">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource AdjustIcon}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="120" MaxWidth="120" Header="藥品代碼" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding ProductID}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="400" Header="藥品名稱" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding FullName}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="80" Header="變化量" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding Amount}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="120" Header="備註" IsReadOnly="True" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding Note}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="120" MaxWidth="120" Header="時間" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Text" Value="{Binding TimeString}" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>
        <DataTemplate x:Key="CustomerDetail" DataType="{x:Type local:PrescriptionRecordWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Label  Content="已修改" Style="{StaticResource BoldLabelContent16}" Foreground="Red" Margin="40,0,0,10"/>
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Label  Content="未修改" Style="{StaticResource BoldLabelContent16}" Foreground="DimGray" Margin="40,0,0,10"/>
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Height="200" Background="{StaticResource GridBackGround}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="390"/>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                    <Image Width="25" Height="25" Source="/Images/Phone.png" Margin="10,0,10,0"/>
                    <TextBox Name="PatientCellPhone" Width="130" Height="30"  HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="手機" FontSize="16" Foreground="{StaticResource ForeGround}"
                             Text="{Binding DataContext.EditedPrescription.Patient.CellPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Image Width="20" Height="25" Source="/Images/Telephone.png" Margin="10,0,10,0"/>
                    <TextBox Name="PatientTel" Width="130" Height="30" Margin="5,0,0,0" HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="家電" FontSize="16" Foreground="{StaticResource ForeGround}" 
                             Text="{Binding DataContext.EditedPrescription.Patient.Tel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextInput">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                    <Image Width="25" Height="25" Source="/Images/home-address.png" Margin="10,0,10,0"/>
                    <TextBox Name="PatientAddress" Width="325" Height="30" HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="地址" FontSize="16" Foreground="{StaticResource ForeGround}" 
                             Text="{Binding DataContext.EditedPrescription.Patient.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextInput">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                    <Image Width="21" Height="25" Source="/Images/email.png" Margin="12,0,10,0"/>
                    <TextBox Name="PatientEmail" Width="325" Height="30" Margin="1,0,0,0" HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="電子信箱" FontSize="16" Foreground="{StaticResource ForeGround}" 
                             Text="{Binding DataContext.EditedPrescription.Patient.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextInput">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" Margin="0,0,0,10">
                    <Image Width="21" Height="25" Source="/Images/line.png" Margin="12,0,10,0"/>
                    <TextBox Name="PatientLine" Width="325" Height="30" Margin="1,0,0,0" HorizontalContentAlignment="Center" materialDesign:HintAssist.Hint="Line ID" FontSize="16" Foreground="{StaticResource ForeGround}" 
                             Text="{Binding DataContext.EditedPrescription.Patient.Line, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextInput">
                                <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel  Orientation="Vertical" Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Margin="10,0,0,0">
                    <Label Content="聯絡備註" FontSize="16" Foreground="{StaticResource ForeGround}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBox Height="165" Width="265" VerticalContentAlignment="Top" Text="{Binding DataContext.EditedPrescription.Patient.ContactNote,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="{StaticResource LightForeGround}" TextWrapping="Wrap" 
                                 AcceptsReturn="True" VerticalScrollBarVisibility="Visible"  Foreground="{StaticResource ForeGround}" FontSize="16" FontWeight="Bold" BorderThickness="0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextInput">
                                    <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel  Orientation="Vertical" Margin="10,0,0,0"  Grid.Row="0" Grid.RowSpan="3" Grid.Column="2">
                    <Label Content="備註" FontSize="16" Foreground="{StaticResource ForeGround}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Height="165" Width="265" VerticalContentAlignment="Top"  Text="{Binding DataContext.EditedPrescription.Patient.Note,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="{StaticResource LightForeGround}" TextWrapping="Wrap"  
                                 AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Foreground="{StaticResource ForeGround}" FontSize="16" FontWeight="Bold" BorderThickness="0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextInput">
                                    <i:InvokeCommandAction Command="{Binding DataContext.CustomerDetailEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,10,0,0">
                    <ContentControl Content="{Binding}" Margin="280,0,0,0">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button Width="80" Height="30" Margin="10,0,0,10" Content="取消" Background="DimGray" BorderBrush="DimGray" Command="{Binding DataContext.CustomerRedoEdited,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" IsEnabled="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                    <Button Width="80" Height="30" Margin="10,0,0,10" Content="存檔" Background="IndianRed" BorderBrush="IndianRed" Command="{Binding DataContext.SavePatientData,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" IsEnabled="{Binding DataContext.CustomerEdited, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="NotPrescribeSummary" DataType="{x:Type local:PrescriptionRecordWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <StackPanel Orientation="Horizontal">
                        <Label  Content="已修改" Style="{StaticResource BoldLabelContent16}" Foreground="Red" Margin="10,0,0,0" Visibility="{Binding DataContext.IsEdit,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BooleanToVisibilityConverter},RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionRecordWindow}">
                    <Label  Content="未修改" Style="{StaticResource BoldLabelContent16}" Foreground="DimGray" Margin="10,0,0,0" Visibility="{Binding DataContext.IsEdit,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource InverseBoolToVisConverter},RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Background="{StaticResource GridBackGround}" Width="355">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Label Content="藥品點數" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.MedicinePoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                    <Label Content="特材點數" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.SpecialMaterialPoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="5,0,0,0" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Label Content="部分負擔" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.CopaymentPoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="5,0,0,0" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                    <Label Content="藥事服務" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.MedicalServicePoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="5,0,0,0" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <Label Content="申請點數" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ApplyPoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="5,0,0,0" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                    <Label Content="總計點數" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.TotalPoint,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="5,0,0,0" Width="75" HorizontalContentAlignment="Right" Height="35"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <Label Content="自費" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="30"/>
                    <TextBox Text="{Binding DataContext.EditedPrescription.PrescriptionPoint.AmountSelfPay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Width="70" Height="35" HorizontalContentAlignment="Right" FontSize="16" CaretBrush="Red" Foreground="{StaticResource ForeGround}"  VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Label Content="押金" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.Deposit,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="10,0,0,0" Width="40" Height="35" HorizontalContentAlignment="Right"/>
                    <Label Content="實收" Style="{StaticResource BoldLabelContent17}" Margin="10,0,0,0" Height="35"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ActualReceive,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent16}" Margin="10,0,0,0" Width="42" Height="35" HorizontalContentAlignment="Right"/>
                </StackPanel>
                <StackPanel Grid.Row="4" Orientation="Horizontal">
                    <ContentControl Content="{Binding}" Margin="10,0,0,0">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button Content="刪除" Command="{Binding DataContext.Delete,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="Red" BorderBrush="Red" Margin="10,5,0,0"/>
                    <Button Content="復原編輯" Command="{Binding DataContext.RedoEdit,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="DimGray" BorderBrush="DimGray" Margin="10,5,0,0" IsEnabled="{Binding IsEdit,UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="編輯完成" Command="{Binding DataContext.EditComplete,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="IndianRed" BorderBrush="IndianRed" Margin="10,5,0,0" IsEnabled="{Binding IsEdit,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="PrescribeSummary" DataType="{x:Type local:PrescriptionEditWindow}">
            <DataTemplate.Resources>
                <DataTemplate x:Key="Edited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <StackPanel Orientation="Horizontal">
                        <Label  Content="已修改" Style="{StaticResource BoldLabelContent18}" Foreground="Red" Margin="10,0,0,0" Visibility="{Binding DataContext.IsEdit,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BooleanToVisibilityConverter},RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="NonEdited" DataType="{x:Type local:PrescriptionEditWindow}">
                    <Label  Content="未修改" Style="{StaticResource BoldLabelContent18}" Foreground="DimGray" Margin="10,0,0,0" Visibility="{Binding DataContext.IsEdit,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource InverseBoolToVisConverter},RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Background="{StaticResource GridBackGround}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="10,0,0,0">
                    <Label Content="自費" Style="{StaticResource BoldLabelContent18}" Height="35"/>
                    <TextBox Text="{Binding DataContext.EditedPrescription.PrescriptionPoint.AmountSelfPay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Width="130" Height="35" HorizontalContentAlignment="Right" FontSize="16" CaretBrush="Red" Foreground="{StaticResource ForeGround}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Label Content="實收" Style="{StaticResource BoldLabelContent18}" Margin="10,0,0,0" Foreground="{StaticResource ForeGround}"/>
                    <Label Content="{Binding DataContext.EditedPrescription.PrescriptionPoint.ActualReceive,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource BoldLabelContent18}" Margin="10,0,0,0" Width="70" HorizontalContentAlignment="Right"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="4">
                    <ContentControl Content="{Binding}" Margin="20,0,10,0">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="ContentTemplate" Value="{StaticResource Edited}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.IsEdit, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NonEdited}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Button Content="刪除" Command="{Binding DataContext.Delete,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="Red" BorderBrush="Red" Margin="10,0,0,0"/>
                    <Button Content="復原編輯" Command="{Binding DataContext.RedoEdit,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="DimGray" BorderBrush="DimGray" Margin="10,0,0,0" IsEnabled="{Binding IsEdit,UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="編輯完成" Command="{Binding DataContext.EditComplete,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Background="IndianRed" BorderBrush="IndianRed" Margin="10,0,0,0" IsEnabled="{Binding IsEdit,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Viewbox Stretch="Fill">
        <Grid Width="1340" Height="800">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition Height="165"/>
                <RowDefinition />
                <RowDefinition Height="250"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="965"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,0" Orientation="Horizontal">
                <Image Width="30" Height="30" Source="/Images/IDcard.png" Margin="10,0,0,0"/>
                <Label Width="115" Height="35" Margin="0,0,10,0" Content="{Binding EditedPrescription.Patient.IDNumber,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource BoldLabelContent18}"/>
                <Image Width="30" Height="30"  Source="/Images/User_48px.png" Margin="10,0,0,0"/>
                <Label Width="120" Height="35" Margin="0,0,10,0"  Style="{StaticResource BoldLabelContent18}" Content="{Binding EditedPrescription.Patient.Name,UpdateSourceTrigger=PropertyChanged}"/>
                <Image Width="30" Height="30" Source="/Images/birthday.png" Margin="10,0,0,0"/>
                <Label Width="100" Height="35" Margin="0,0,10,0" Style="{StaticResource BoldLabelContent18}" Content="{Binding EditedPrescription.Patient.Birthday,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource NullableDateConverter}}"/>
                <Image Width="30" Height="30" Source="/Images/Phone.png" Margin="10,0,0,0"/>
                <Label Width="110" Height="35" Margin="0,0,20,0" Style="{StaticResource BoldLabelContent18}" Content="{Binding EditedPrescription.Patient.CellPhone, UpdateSourceTrigger=PropertyChanged}"/>
                <Image Width="25" Height="25" Source="/Images/Telephone.png" Margin="10,0,0,0"/>
                <Label Width="120" Height="35" Margin="0,0,20,0" Style="{StaticResource BoldLabelContent18}" Content="{Binding EditedPrescription.Patient.Tel, UpdateSourceTrigger=PropertyChanged}"/>
                <ContentControl Content="{Binding}" Margin="10,10,10,0">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource GetCardButtonsArea}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.CanMakeUp, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="false">
                                    <Setter Property="ContentTemplate" Value="{StaticResource GetCardButtonsArea}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.CanMakeUp, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="ContentTemplate" Value="{StaticResource NoCardButtonsArea}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </StackPanel>
            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="10" Orientation="Horizontal">
                    <Label  Content="釋出院所" Style="{StaticResource BoldLabelContent18}"/>
                    <TextBox x:Name="ReleaseHospital" Width="400" Height="35" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource BoldTextBoxContent16}" CaretBrush="Red"
                             Background="Transparent" BorderBrush="DimGray" BorderThickness="0,0,0,1" IsEnabled="{Binding NotPrescribe, UpdateSourceTrigger=PropertyChanged}"
                             FontStretch="ExtraExpanded" Text="{Binding EditedPrescription.Institution.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding GetInstitution}" CommandParameter="{Binding Text, ElementName=ReleaseHospital}" Key="Enter" />
                        </TextBox.InputBindings>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Button x:Name="CommonHospitalList" Command="{Binding ShowCommonInstitutionSelectionWindow}" Content="{StaticResource CommonHospital}" Margin="10,0,10,0" Background="Transparent" BorderBrush="Transparent" Height="30" Width="30" Padding="0" Visibility="Visible" />
                    <Label Content="就醫科別" Style="{StaticResource BoldLabelContent18}" Margin="6,0,0,0"/>
                    <ComboBox x:Name="DivisionCombo" Width="170" HorizontalContentAlignment="Center" DisplayMemberPath="FullName" IsTextSearchEnabled="True" TextSearch.TextPath="ID" InputScope="AlphanumericHalfWidth"
                              IsEditable="False" FontSize="16"  ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}" StaysOpenOnEdit="True" ItemsSource="{Binding Divisions}" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding EditedPrescription.Division, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Label Content="調劑藥師" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <ComboBox x:Name="HisPerson" Width="170" Height="35" FontSize="16" DisplayMemberPath="Name" ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}" IsTextSearchEnabled="True" IsEditable="False" ItemsSource="{Binding MedicalPersonnels}"
                              SelectedItem="{Binding EditedPrescription.Pharmacist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Label Content="就醫序號" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <TextBox x:Name="MedicalNumber" Width="170" Height="35" HorizontalContentAlignment="Center" FontSize="16" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="4"
                             Text="{Binding EditedPrescription.TempMedicalNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,0,0,1" BorderBrush="DimGray" CharacterCasing="Upper" PreviewKeyDown="MedicalNumber_OnPreviewKeyDown">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Row="1" Margin="10" Orientation="Horizontal">
                    <Label  Content="就醫日期" Style="{StaticResource BoldLabelContent18}"/>
                    <xctk:MaskedTextBox x:Name="TreatDate" Width="160" Height="34" Margin="10,0,0,0" HorizontalContentAlignment="Center" FontSize="16" Style="{StaticResource MaterialDesignTextBox}" InputMethod.IsInputMethodEnabled="False"
                                        Foreground="{StaticResource ForeGround}" Mask="000/00/00" PromptChar="-" ValueDataType="{x:Type xctk:DateTimeFormat}" InsertKeyMode="Overwrite" GotFocus="DateControl_GotFocus" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <Binding Path="EditedPrescription.TreatDate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" 
                                 ValidatesOnDataErrors="True" NotifyOnValidationError="True" Converter="{StaticResource NullableDateConverter}">
                            <Binding.ValidationRules>
                                <service:DateValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xctk:MaskedTextBox>
                    <Label Content="調劑日期" Style="{StaticResource BoldLabelContent18}" Margin="19,0,0,0"/>
                    <xctk:MaskedTextBox Width="170" Height="35" Margin="0,0,0,0" HorizontalContentAlignment="Center" FontSize="17" Style="{StaticResource MaterialDesignTextBox}" BorderBrush="DimGray" InsertKeyMode="Overwrite"
                                        Foreground="{StaticResource ForeGround}" Mask="000/00/00" PromptChar="-" ValueDataType="{x:Type xctk:DateTimeFormat}" BorderThickness="0,0,0,1" IsReadOnly="{Binding EditedPrescription.PrescriptionStatus.IsGetCard}" IsReadOnlyCaretVisible="False">
                        <Binding Path="EditedPrescription.AdjustDate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True" NotifyOnValidationError="True" Converter="{StaticResource NullableDateConverter}">
                            <Binding.ValidationRules>
                                <service:DateValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <command:EventToCommand Command="{Binding AdjustDateLostFocus}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xctk:MaskedTextBox>
                    <Label Content="主要診斷" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <TextBox x:Name="MainDisease" Width="170" HorizontalContentAlignment="Center" FontSize="16" CaretBrush="Red" Height="35"
                             InputMethod.IsInputMethodEnabled="False" CharacterCasing="Upper"
                             Text="{Binding EditedPrescription.MainDisease.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <command:EventToCommand Command="{Binding CheckClearDisease}">
                                    <command:EventToCommand.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                            <Binding Path="Name" ElementName="MainDisease" />
                                            <Binding Path="Text" ElementName="MainDisease"/>
                                        </MultiBinding>
                                    </command:EventToCommand.CommandParameter>
                                </command:EventToCommand>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding GetDiseaseCode}" Key="Enter" >
                                <KeyBinding.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                        <Binding Path="Name" ElementName="MainDisease" />
                                        <Binding Path="Text" ElementName="MainDisease"/>
                                    </MultiBinding>
                                </KeyBinding.CommandParameter>
                            </KeyBinding>
                        </TextBox.InputBindings>
                    </TextBox>
                    <Label Content="次要診斷" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <TextBox x:Name="SecondDisease" Width="170" HorizontalContentAlignment="Center" FontSize="16" CaretBrush="Red" Height="35"
                             InputMethod.IsInputMethodEnabled="False" CharacterCasing="Upper" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                             Text="{Binding EditedPrescription.SubDisease.FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <command:EventToCommand Command="{Binding CheckClearDisease}">
                                    <command:EventToCommand.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                            <Binding Path="Name" ElementName="SecondDisease" />
                                            <Binding Path="Text" ElementName="SecondDisease"/>
                                        </MultiBinding>
                                    </command:EventToCommand.CommandParameter>
                                </command:EventToCommand>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding GetDiseaseCode}" Key="Enter" >
                                <KeyBinding.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiCommandParametersConverter}">
                                        <Binding Path="Name" ElementName="SecondDisease" />
                                        <Binding Path="Text" ElementName="SecondDisease"/>
                                    </MultiBinding>
                                </KeyBinding.CommandParameter>
                            </KeyBinding>
                        </TextBox.InputBindings>
                    </TextBox>
                    <Label Content="領藥次數" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <TextBox x:Name="ChronicTotal" Width="66" Height="35" HorizontalContentAlignment="Center" FontSize="16" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CaretBrush="Red" MaxLength="1"
                             Text="{Binding EditedPrescription.ChronicTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource NullableIntConverter}}" InputMethod.IsInputMethodEnabled="False">
                    </TextBox>
                    <Label Content=" 一 " Style="{StaticResource BoldLabelContent18}"/>
                    <TextBox x:Name="ChronicSequence" Width="66" Height="35" HorizontalContentAlignment="Center" FontSize="16" InputMethod.IsInputMethodEnabled="False" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CaretBrush="Red" MaxLength="1"
                             Text="{Binding EditedPrescription.ChronicSeq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource NullableIntConverter}}" >
                        
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Row="2" Margin="10" Orientation="Horizontal">
                    <Label Content="調劑案件" Style="{StaticResource BoldLabelContent18}" Height="35" />
                    <Label Width="170" Content="{Binding EditedPrescription.AdjustCase.FullName,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource BoldLabelContent17}" Height="35" BorderBrush="DimGray" BorderThickness="0,0,0,1" HorizontalContentAlignment="Center"/>
                    <Label Content="處方案件" Style="{StaticResource BoldLabelContent18}" Margin="19,0,0,0"/>
                    <ComboBox x:Name="PrescriptionCaseCombo" Width="170" Height="34" HorizontalContentAlignment="Center" DisplayMemberPath="FullName" IsTextSearchEnabled="True" InputScope="AlphanumericHalfWidth"
                              IsEditable="False" FontSize="16"  ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}" StaysOpenOnEdit="True" ItemsSource="{Binding PrescriptionCases}" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding EditedPrescription.PrescriptionCase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Label Content="部分負擔" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <Label Width="170" Height="35" BorderThickness="0,0,0,1" BorderBrush="DimGray" Style="{StaticResource BoldLabelContent16}"
                           Content="{Binding EditedPrescription.Copayment.FullName,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center"/>
                    <Label Content="給付類別" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <ComboBox x:Name="PaymentCategoryCombo" Width="170" Height="34" HorizontalContentAlignment="Center" DisplayMemberPath="FullName" IsTextSearchEnabled="True" InputScope="AlphanumericHalfWidth" Foreground="{StaticResource ForeGround}"
                              IsEditable="False" FontSize="16"  ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}" StaysOpenOnEdit="False" ItemsSource="{Binding PaymentCategories}"
                              SelectedItem="{Binding EditedPrescription.PaymentCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Label Content="特定治療" Style="{StaticResource BoldLabelContent18}" Margin="15,0,0,0"/>
                    <ComboBox x:Name="SpecialTreatCombo" Width="170" Height="34" HorizontalContentAlignment="Center" DisplayMemberPath="FullName" IsTextSearchEnabled="True" InputScope="AlphanumericHalfWidth"
                              IsEditable="False" FontSize="16"  ItemContainerStyle="{StaticResource ComboItemContainerStyleAlignLeft}" StaysOpenOnEdit="False" ItemsSource="{Binding SpecialTreats}"
                              SelectedItem="{Binding EditedPrescription.SpecialTreat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NotPrescribe, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <command:EventToCommand Command="{Binding DataChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>
            </Grid>
            <DataGrid x:Name="PrescriptionMedicines" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,0" SelectedItem="{Binding EditedPrescription.SelectedMedicine, Mode=TwoWay, Converter={StaticResource SentinelConverter}}" CanUserAddRows="False" Width="1320"
                          AutoGenerateColumns="False" Background="{StaticResource GridBackGround}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" CellStyle="{StaticResource DataGridCellStyle}" CanUserDeleteRows="False"
                          FrozenColumnCount="3" CanUserSortColumns="False" EnableRowVirtualization="False" GridLinesVisibility="Horizontal" ItemsSource="{Binding EditedPrescription.Medicines, UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="False" />
                        <Setter Property="Width" Value="100" />
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="15" />
                                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Width" Value="15" />
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <newClass:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Height" Value="40" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource GridDarkerBackGround}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn MinWidth="20" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding Order,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="150" Header="健保代碼" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding ID,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="10,0,0,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn MinWidth="400" MaxWidth="400" Header="藥品名稱" IsReadOnly="True" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                    <generalCustomControl:ProductStatusIcon IsCommon="{Binding IsCommon,UpdateSourceTrigger=PropertyChanged}" ControlLevel="{Binding ControlLevel,UpdateSourceTrigger=PropertyChanged}" IsFrozen="{Binding Frozen,UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Content="{Binding FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="16" Margin="-5,0,0,0" Height="35"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <EventSetter Event="MouseDoubleClick" Handler="ShowMedicineDetail"/>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="#FF424040" />
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn MinWidth="60" Header="用量" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding Dosage,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="40" Header="用法" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding UsageName,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="40" Header="天數" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding Days,Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource NullableIntConverter}}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="40" Header="途徑" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding PositionID,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="40" Header="總量" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding Amount,Mode=OneWay,StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="60" Binding="{Binding NHIPrice, UpdateSourceTrigger=PropertyChanged}" FontSize="16" FontWeight="Bold" Header="健保價" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn MinWidth="40" Header="自費" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="PaySelf" HorizontalAlignment="Center" HorizontalContentAlignment="Center" IsChecked="{Binding PaySelf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn MinWidth="60" Header="自費價" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding Price,Mode=OneWay,StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="60" Header="總價" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding TotalPrice,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="80" Header="上次進價" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding CostPrice,StringFormat=N2,UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn MinWidth="40" Header="可用量" FontSize="16" FontWeight="Bold" IsReadOnly="True" Binding="{Binding UsableAmount,StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn MinWidth="60" Header="扣庫量" IsReadOnly="True" Visibility="{Binding Data.EditedPrescription.IsBuckle,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BooleanToVisibilityConverter},Source={StaticResource proxy}}" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox x:Name="BuckleAmount" MinWidth="60" Height="35" HorizontalContentAlignment="Center" BorderBrush="DimGray" BorderThickness="0,0,0,1" InputScope="AlphanumericHalfWidth" IsReadOnlyCaretVisible="False" KeyDown="DoubleTextBox_OnKeyDown"
                                             FontSize="16" FontWeight="Bold"  CaretBrush="Red" GotFocus="InputTextBox_OnGotFocus" PreviewMouseLeftButtonDown="InputTextBox_OnPreviewMouseLeftButtonDown"
                                             Text="{Binding BuckleAmount, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <command:EventToCommand Command="{Binding DataContext.DataChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Vertical" Grid.Row="3" Grid.Column="0" Margin="10,10,0,10">
                <StackPanel Orientation="Horizontal" Height="35" Background="{StaticResource GridBackGround}">
                    <RadioButton GroupName="CusHistoryGroup" Content="顧客資料" IsChecked="{Binding Path=SelectedDetail, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Option1}" FontSize="14" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    <RadioButton GroupName="CusHistoryGroup" Content="藥品修改紀錄" IsChecked="{Binding Path=SelectedDetail, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Option2}" FontSize="14" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
                <ContentControl Content="{Binding}">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource CustomerDetail}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.SelectedDetail, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option1">
                                    <Setter Property="ContentTemplate" Value="{StaticResource CustomerDetail}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.SelectedDetail, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option2">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PrescriptionEditRecord}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </StackPanel>
            <ContentControl Content="{Binding}" Grid.Row="3" Grid.Column="1" Margin="0,10,0,10">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="ContentTemplate" Value="{StaticResource NotPrescribeSummary}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.SelectedPatientDetail, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option1">
                                <Setter Property="ContentTemplate" Value="{StaticResource NotPrescribeSummary}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.SelectedPatientDetail, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Option2">
                                <Setter Property="ContentTemplate" Value="{StaticResource PrescribeSummary}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </Viewbox>
</Window>
